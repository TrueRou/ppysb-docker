services:
  bancho.py:
    build:
      context: app
      target: bancho.py
    restart: always
    volumes:
      - project:/osu-server
    networks:
      - network
    environment:
      IS_DEV: $IS_DEV
      IS_REGISTRATION_ALLOWED: $IS_REGISTRATION_ALLOWED

  guweb:
    build:
      context: app
      target: guweb
    restart: always
    ports:
      - 10000:10000
    volumes:
      - project:/osu-server
    networks:
      - network
    environment:
      IS_DEV: $IS_DEV
      IS_REGISTRATION_ALLOWED: $IS_REGISTRATION_ALLOWED

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    networks:
      - network
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - redis-data:/data
      - redis-etc:/etc

  mysql:
    image: mysql:8
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/base.sql:/base.sql
    ports:
      - 3306:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - network

  caddy:
    image: caddy:2.6.2-alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    networks:
      - network

volumes:
  mysql-data:
  redis-data:
  redis-etc:
  # maybe bancho.py was born with the complexity when using docker. lol
  project:

networks:
  network:
